(define (cube x)
  (* x x x))

(define (sum term a next b)
  (if (> a b)
      0
      (+ (term a)
         (sum term (next a) next b)))
  )

(define (integral f a b dx)
  (define (add-dx x)
    (+ x dx))
  (* (sum f (+ a (/ dx 2)) add-dx b) dx)
  )

(define (simpson f a b n)
  (define (inc x)
    (+ x 1))
  (define (h)
    (/ (- b a) n)
    )
  (define (count k)
    (*
     (expt 2 (+ (remainder k 2) (if (= k 0) 0 1)))
     (f (+ a (* k (h))))
     )
    )
  (* (/ (h) 3.0) (sum count 0 inc n))
  )
